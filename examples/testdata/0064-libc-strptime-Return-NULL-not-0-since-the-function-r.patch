From 8f0a5894cdce7b38cd6d4db5ba3adfca0d62dfd5 Mon Sep 17 00:00:00 2001
From: Sascha Wildner <saw@online.de>
Date: Mon, 25 Jul 2016 20:43:03 +0200
Subject: [PATCH 064/100] libc/strptime: Return NULL, not 0, since the function
 returns char *.

While here, accept 'UTC' for %Z as well.

Taken-from: FreeBSD
---
 lib/libc/stdtime/strptime.c | 83 +++++++++++++++++++++++----------------------
 1 file changed, 42 insertions(+), 41 deletions(-)

diff --git a/lib/libc/stdtime/strptime.c b/lib/libc/stdtime/strptime.c
index 03eef69..7e455f9 100644
--- a/lib/libc/stdtime/strptime.c
+++ b/lib/libc/stdtime/strptime.c
@@ -99,7 +99,7 @@ _strptime(const char *buf, const char *fmt, struct tm *tm, int *GMTp,
 				       isspace_l((unsigned char)*buf, locale))
 					buf++;
 			else if (c != *buf++)
-				return 0;
+				return (NULL);
 			continue;
 		}
 
@@ -111,18 +111,18 @@ label:
 		case 0:
 		case '%':
 			if (*buf++ != '%')
-				return 0;
+				return (NULL);
 			break;
 
 		case '+':
 			buf = _strptime(buf, tptr->date_fmt, tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'C':
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			/* XXX This will break for 3-digit centuries. */
 			len = 2;
@@ -133,7 +133,7 @@ label:
 				len--;
 			}
 			if (i < 19)
-				return 0;
+				return (NULL);
 
 			tm->tm_year = i * 100 - 1900;
 			break;
@@ -141,13 +141,13 @@ label:
 		case 'c':
 			buf = _strptime(buf, tptr->c_fmt, tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'D':
 			buf = _strptime(buf, "%m/%d/%y", tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'E':
@@ -165,42 +165,42 @@ label:
 		case 'F':
 			buf = _strptime(buf, "%Y-%m-%d", tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'R':
 			buf = _strptime(buf, "%H:%M", tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'r':
 			buf = _strptime(buf, tptr->ampm_fmt, tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'T':
 			buf = _strptime(buf, "%H:%M:%S", tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'X':
 			buf = _strptime(buf, tptr->X_fmt, tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'x':
 			buf = _strptime(buf, tptr->x_fmt, tm, GMTp, locale);
 			if (buf == 0)
-				return 0;
+				return (NULL);
 			break;
 
 		case 'j':
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = 3;
 			for (i = 0; len && *buf != 0 &&
@@ -210,7 +210,7 @@ label:
 				len--;
 			}
 			if (i < 1 || i > 366)
-				return 0;
+				return (NULL);
 
 			tm->tm_yday = i - 1;
 			break;
@@ -222,7 +222,7 @@ label:
 				break;
 
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = 2;
 			for (i = 0; len && *buf != 0 &&
@@ -234,11 +234,11 @@ label:
 
 			if (c == 'M') {
 				if (i > 59)
-					return 0;
+					return (NULL);
 				tm->tm_min = i;
 			} else {
 				if (i > 60)
-					return 0;
+					return (NULL);
 				tm->tm_sec = i;
 			}
 
@@ -262,7 +262,7 @@ label:
 			 * digits if used incorrectly.
 			 */
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = 2;
 			for (i = 0; len && *buf != 0 &&
@@ -273,9 +273,9 @@ label:
 			}
 			if (c == 'H' || c == 'k') {
 				if (i > 23)
-					return 0;
+					return (NULL);
 			} else if (i > 12)
-				return 0;
+				return (NULL);
 
 			tm->tm_hour = i;
 
@@ -294,7 +294,7 @@ label:
 			len = strlen(tptr->am);
 			if (strncasecmp_l(buf, tptr->am, len, locale) == 0) {
 				if (tm->tm_hour > 12)
-					return 0;
+					return (NULL);
 				if (tm->tm_hour == 12)
 					tm->tm_hour = 0;
 				buf += len;
@@ -304,14 +304,14 @@ label:
 			len = strlen(tptr->pm);
 			if (strncasecmp_l(buf, tptr->pm, len, locale) == 0) {
 				if (tm->tm_hour > 12)
-					return 0;
+					return (NULL);
 				if (tm->tm_hour != 12)
 					tm->tm_hour += 12;
 				buf += len;
 				break;
 			}
 
-			return 0;
+			return (NULL);
 
 		case 'A':
 		case 'a':
@@ -326,7 +326,7 @@ label:
 					break;
 			}
 			if (i == asizeof(tptr->weekday))
-				return 0;
+				return (NULL);
 
 			tm->tm_wday = i;
 			buf += len;
@@ -341,7 +341,7 @@ label:
 			 * range for now.
 			 */
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = 2;
 			for (i = 0; len && *buf != 0 &&
@@ -351,7 +351,7 @@ label:
 				len--;
 			}
 			if (i > 53)
-				return 0;
+				return (NULL);
 
 			if (*buf != 0 &&
 			    isspace_l((unsigned char)*buf, locale))
@@ -362,11 +362,11 @@ label:
 
 		case 'w':
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			i = *buf - '0';
 			if (i > 6)
-				return 0;
+				return (NULL);
 
 			tm->tm_wday = i;
 
@@ -388,7 +388,7 @@ label:
 			 * digits if used incorrectly.
 			 */
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = 2;
 			for (i = 0; len && *buf != 0 &&
@@ -398,7 +398,7 @@ label:
 				len--;
 			}
 			if (i > 31)
-				return 0;
+				return (NULL);
 
 			tm->tm_mday = i;
 
@@ -441,7 +441,7 @@ label:
 				}
 			}
 			if (i == asizeof(tptr->month))
-				return 0;
+				return (NULL);
 
 			tm->tm_mon = i;
 			buf += len;
@@ -449,7 +449,7 @@ label:
 
 		case 'm':
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = 2;
 			for (i = 0; len && *buf != 0 &&
@@ -459,7 +459,7 @@ label:
 				len--;
 			}
 			if (i < 1 || i > 12)
-				return 0;
+				return (NULL);
 
 			tm->tm_mon = i - 1;
 
@@ -482,7 +482,7 @@ label:
 			n = strtol_l(buf, &cp, 10, locale);
 			if (errno == ERANGE || (long)(t = n) != n) {
 				errno = sverrno;
-				return 0;
+				return (NULL);
 			}
 			errno = sverrno;
 			buf = cp;
@@ -498,7 +498,7 @@ label:
 				break;
 
 			if (!isdigit_l((unsigned char)*buf, locale))
-				return 0;
+				return (NULL);
 
 			len = (c == 'Y') ? 4 : 2;
 			for (i = 0; len && *buf != 0 &&
@@ -512,7 +512,7 @@ label:
 			if (c == 'y' && i < 69)
 				i += 100;
 			if (i < 0)
-				return 0;
+				return (NULL);
 
 			tm->tm_year = i;
 
@@ -536,14 +536,15 @@ label:
 				strncpy(zonestr, buf, cp - buf);
 				zonestr[cp - buf] = '\0';
 				tzset();
-				if (0 == strcmp(zonestr, "GMT")) {
+				if (0 == strcmp(zonestr, "GMT") ||
+				    0 == strcmp(zonestr, "UTC")) {
 				    *GMTp = 1;
 				} else if (0 == strcmp(zonestr, tzname[0])) {
 				    tm->tm_isdst = 0;
 				} else if (0 == strcmp(zonestr, tzname[1])) {
 				    tm->tm_isdst = 1;
 				} else {
-				    return 0;
+				    return (NULL);
 				}
 				buf += cp - buf;
 			}
@@ -558,7 +559,7 @@ label:
 				if (*buf == '-')
 					sign = -1;
 				else
-					return 0;
+					return (NULL);
 			}
 
 			buf++;
@@ -569,7 +570,7 @@ label:
 					i += *buf - '0';
 					buf++;
 				} else
-					return 0;
+					return (NULL);
 			}
 
 			tm->tm_hour -= sign * (i / 100);
-- 
2.7.2

